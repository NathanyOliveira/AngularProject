{"ast":null,"code":"import { FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../professores.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../shared/mostrar-mensagem/mostrar-mensagem.component\";\nexport let ProfessorFormComponent = /*#__PURE__*/(() => {\n  class ProfessorFormComponent {\n    // 2-) injetar o FormBuilder para poder ajudar a criar os controles do form\n    constructor(formBuilder, professoresService, router, activatedRoute) {\n      this.formBuilder = formBuilder;\n      this.professoresService = professoresService;\n      this.router = router;\n      this.activatedRoute = activatedRoute; // 1-) alocar a variável que vai ter os controles do form\n\n      this.meuForm = new FormGroup({}); // para saber se é edição\n\n      this.isEdicao = false; // id de quem estou alterando\n\n      this.id = -1;\n    } // 3-) alocar os controles na variável meuForm através do formBuilder\n\n\n    ngOnInit() {\n      this.meuForm = this.formBuilder.group({\n        nome: [null, [Validators.required]],\n        rua: [null, [Validators.required]],\n        numero: [null, [Validators.required]],\n        cep: [null, [Validators.required]]\n      }); // pegar parâmetros das rotas\n\n      this.activatedRoute.params.subscribe(parametros => {\n        console.log(parametros); // é EDIÇÃO\n\n        if (parametros.id) {\n          console.log(`edição id ${parametros.id}`);\n          this.isEdicao = true;\n          this.id = parametros.id; // PRECISO consultar a API para buscar todas as informações do ID a ser editado\n\n          this.professoresService.getOne(parametros.id).subscribe(dadosProfessores => {\n            console.log(dadosProfessores); // patchValue atualiza os campos do formulário de acordo com o nome dos controles\n\n            this.meuForm.patchValue(dadosProfessores);\n          });\n        } // é CRIAÇÃO\n        else {\n          console.log(`criação`);\n          this.isEdicao = false;\n        }\n      });\n    } // 4-) integrar os controles do form no HTML\n\n\n    onSubmit() {\n      //console.log(this.meuForm.value);\n      // edicao igual a false significa que é criação\n      if (this.isEdicao == false) {\n        this.professoresService.save(this.meuForm.value).subscribe(data => {\n          console.log(data); // o navigate é para redirecionar para uma outra rota de interesse\n\n          this.router.navigate(['/professores']);\n        });\n      } //é alteração de algum registro\n      else {\n        this.professoresService.update(this.id, this.meuForm.value).subscribe(data => {\n          console.log(data); // o navigate é para redirecionar para uma outra rota de interesse\n\n          this.router.navigate(['/professores']);\n        });\n      }\n    }\n\n  }\n\n  ProfessorFormComponent.ɵfac = function ProfessorFormComponent_Factory(t) {\n    return new (t || ProfessorFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProfessoresService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  ProfessorFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProfessorFormComponent,\n    selectors: [[\"app-professor-form\"]],\n    decls: 32,\n    vars: 9,\n    consts: [[3, \"formGroup\", \"submit\"], [1, \"row\", \"d-flex\", \"justify-content-center\"], [1, \"col-8\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"nome\", \"placeholder\", \"Nome\", 1, \"form-control\"], [3, \"controles\", \"mensagem\"], [\"type\", \"text\", \"formControlName\", \"rua\", \"placeholder\", \"Rua\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"numero\", \"placeholder\", \"N\\u00FAmero\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"cep\", \"placeholder\", \"CEP\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function ProfessorFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function ProfessorFormComponent_Template_form_submit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"app-mostrar-mensagem\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 1);\n        i0.ɵɵelementStart(9, \"div\", 2);\n        i0.ɵɵelementStart(10, \"div\", 3);\n        i0.ɵɵelementStart(11, \"label\");\n        i0.ɵɵtext(12, \"Rua\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"app-mostrar-mensagem\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 1);\n        i0.ɵɵelementStart(16, \"div\", 2);\n        i0.ɵɵelementStart(17, \"div\", 3);\n        i0.ɵɵelementStart(18, \"label\");\n        i0.ɵɵtext(19, \"N\\u00FAmero\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"app-mostrar-mensagem\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 1);\n        i0.ɵɵelementStart(23, \"div\", 2);\n        i0.ɵɵelementStart(24, \"div\", 3);\n        i0.ɵɵelementStart(25, \"label\");\n        i0.ɵɵtext(26, \"CEP\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"app-mostrar-mensagem\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 1);\n        i0.ɵɵelementStart(30, \"button\", 9);\n        i0.ɵɵtext(31, \"Salvar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.meuForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"controles\", ctx.meuForm.controls[\"nome\"])(\"mensagem\", \"Erro ao preencher nome\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"controles\", ctx.meuForm.controls[\"rua\"])(\"mensagem\", \"Erro ao preencher rua\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"controles\", ctx.meuForm.controls[\"numero\"])(\"mensagem\", \"Erro ao preencher n\\u00FAmero\");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"controles\", ctx.meuForm.controls[\"cep\"])(\"mensagem\", \"Erro ao preencher CEP\");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.MostrarMensagemComponent],\n    styles: [\"\"]\n  });\n  return ProfessorFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}